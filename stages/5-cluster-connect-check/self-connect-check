#!/bin/bash
set -ex

job_id=$(echo $CI_JOB_ID)
gittoken=$(echo "$github_token")
current_time=$(date)
branch_name=$CI_COMMIT_REF_NAME
######################
##   Prerequisites  ##
######################
mkdir ~/.kube
cp  .kube/config ~/.kube/config
# director url
URL=https://$(kubectl get node -o wide | awk {'print $7'} | head -n 4 | tail -n 1):30380
echo $URL
# Cloning oep repository which contains all the test scripts
git clone https://$username:$password@github.com/mayadata-io/oep.git
######################
##   Running test  ##
######################
test_name=self-connect-check
echo $test_name
stage=4-director-functionality-check
test_desc="Common functional check for cluster-connect "
kubectl get pods
kubectl create -f oep/litmus/director/cluster-connect-check/run_litmus_test.yml
# check litmus test result
litmus_pod=$(kubectl get po -n litmus | grep $test_name  | awk {'print $1'} | tail -n 1)
echo $litmus_pod
job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
while [[ "$job_status" != "Completed" ]]
do 
    job_status=$(kubectl get po  $litmus_pod -n litmus | awk {'print $3'} | tail -n 1)
    sleep 6
done
kubectl logs -f $litmus_pod -n litmus
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)
echo $testResult

if [[ $branch_name == "master" ]]; then
   python3 utils/result_update.py --job_id $job_id --stage $stage --test_desc $test_desc --test_result $testResult --time_stamp $current_time --token $gittoken --test_name $test_name
fi

if [ "$testResult" != Pass ]; then 
exit 1; 
fi
